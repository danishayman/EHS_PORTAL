@model CLIP.Models.PlantMonitoring

@{
    ViewBag.Title = "Update Monitoring Status";
    var isAdmin = ViewBag.IsAdmin;
}

<h2>Update Monitoring Status</h2>

<div class="row mb-3">
    <div class="col-md-12">
        <div class="alert alert-info">
            <strong>Monitoring:</strong> @Model.Monitoring.MonitoringName |
            <strong>Plant:</strong> @Model.Plant.PlantName |
            <strong>Area:</strong> @(string.IsNullOrEmpty(Model.Area) ? "N/A" : Model.Area) |
            <strong>Current Status:</strong> <span class="badge @Model.StatusCssClass">@Model.Status</span>
        </div>
    </div>
</div>

@using (Html.BeginForm("UpdateStatus", "PlantMonitoring", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.PlantID)
    @Html.HiddenFor(model => model.MonitoringID)
    @Html.HiddenFor(model => model.Area)
    @Html.HiddenFor(model => model.QuoteDoc)
    @Html.HiddenFor(model => model.EprDoc)
    @Html.HiddenFor(model => model.WorkDoc)

    <div class="row">
        <!-- Expiry Date -->
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5>Expiry Date & Remarks</h5>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">Expiry Date:</label>
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.ExpDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">Remarks:</label>
                        <div class="col-sm-10">
                            @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", rows = 3 })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quotation Phase -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">Quotation Phase</h5>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Start:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.QuoteDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Submit:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.QuoteSubmitDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Complete:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.QuoteCompleteDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Assigned:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.QuoteUserAssign, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Document:</label>
                        <div class="col-sm-8">
                            <input type="file" name="quoteDocument" class="form-control-file file-upload" accept=".pdf,.doc,.docx,.xls,.xlsx,.txt,.jpg,.jpeg,.png" data-max-size="20" />
                            <small class="form-text text-muted">Max file size: 20MB</small>
                            @if (!string.IsNullOrEmpty(Model.QuoteDoc))
                            {
                                <div class="mt-2">
                                    <a href="@Url.Content(Model.QuoteDoc)" target="_blank" class="btn btn-sm btn-info">
                                        <i class="fas fa-file-download"></i> View Document
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Preparation Phase -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header bg-warning text-white">
                    <h5 class="mb-0">Raise ePR Phase</h5>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Start:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.EprDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Submit:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.EprSubmitDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Complete:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.EprCompleteDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Assigned:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.EprUserAssign, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Document:</label>
                        <div class="col-sm-8">
                            <input type="file" name="eprDocument" class="form-control-file file-upload" accept=".pdf,.doc,.docx,.xls,.xlsx,.txt,.jpg,.jpeg,.png" data-max-size="20" />
                            <small class="form-text text-muted">Max file size: 20MB</small>
                            @if (!string.IsNullOrEmpty(Model.EprDoc))
                            {
                                <div class="mt-2">
                                    <a href="@Url.Content(Model.EprDoc)" target="_blank" class="btn btn-sm btn-info">
                                        <i class="fas fa-file-download"></i> View Document
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Work Execution Phase -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Work Execution Phase</h5>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Start:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.WorkDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Submit:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.WorkSubmitDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Complete:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.WorkCompleteDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Assigned:</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.WorkUserAssign, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Document:</label>
                        <div class="col-sm-8">
                            <input type="file" name="workDocument" class="form-control-file file-upload" accept=".pdf,.doc,.docx,.xls,.xlsx,.txt,.jpg,.jpeg,.png" data-max-size="20" />
                            <small class="form-text text-muted">Max file size: 20MB</small>
                            @if (!string.IsNullOrEmpty(Model.WorkDoc))
                            {
                                <div class="mt-2">
                                    <a href="@Url.Content(Model.WorkDoc)" target="_blank" class="btn btn-sm btn-info">
                                        <i class="fas fa-file-download"></i> View Document
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-12">
            <button type="submit" class="btn btn-primary">Save Changes</button>
            @Html.ActionLink("Back to Details", "Details", new { id = Model.Id }, new { @class = "btn btn-secondary" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            // File size validation
            $('.file-upload').on('change', function() {
                var fileInput = $(this)[0];
                var maxSize = parseInt($(this).data('max-size')) * 1024 * 1024; // Convert MB to bytes
                
                if (fileInput.files.length > 0) {
                    var fileSize = fileInput.files[0].size; // in bytes
                    if (fileSize > maxSize) {
                        alert('File size exceeds the limit of 20MB. Please choose a smaller file.');
                        $(this).val(''); // Clear the file input
                        return false;
                    }
                }
            });

            // Form submission validation
            $('form').on('submit', function(e) {
                var isValid = true;
                $('.file-upload').each(function() {
                    var fileInput = $(this)[0];
                    var maxSize = parseInt($(this).data('max-size')) * 1024 * 1024;
                    
                    if (fileInput.files.length > 0) {
                        var fileSize = fileInput.files[0].size;
                        if (fileSize > maxSize) {
                            alert('File size exceeds the limit of 20MB. Please choose a smaller file.');
                            $(this).val('');
                            isValid = false;
                            return false;
                        }
                    }
                });
                
                return isValid;
            });
        });
    </script>
} 