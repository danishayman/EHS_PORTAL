@model IEnumerable<EHS_PORTAL.Areas.CLIP.Models.UserCompetency>
@{
    ViewBag.Title = "User Competencies";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Competencies for @ViewBag.User.UserName</h1>
        <div>
            <a href="@Url.Action("Index", "UserCompetency")" class="btn btn-outline-secondary me-2">
                <i class="fas fa-arrow-left me-2"></i>Back
            </a>
            @if (User.IsInRole("Admin"))
            {
                <a href="@Url.Action("Assign", "UserCompetency")" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Assign New Competency
                </a>
            }
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">User Details</h5>
                </div>
                <div class="card-body">
                    <dl class="mb-0">
                        <dt>Username</dt>
                        <dd>@ViewBag.User.UserName</dd>
                        
                        <dt>Employee ID</dt>
                        <dd>@(string.IsNullOrEmpty(ViewBag.User.EmpID) ? "Not set" : ViewBag.User.EmpID)</dd>
                        
                        <dt>Email</dt>
                        <dd>@ViewBag.User.Email</dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Professional Development Points</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-6">
                            <div class="d-flex flex-column align-items-center">
                                <div class="display-4 text-primary">@(ViewBag.CEPPoints ?? 0)</div>
                                <span>CEP Points</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex flex-column align-items-center">
                                <div class="display-4 text-primary">@(ViewBag.CPDPoints ?? 0)</div>
                                <span>CPD Points</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Competency Summary</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <div class="display-4">@Model.Count()</div>
                                <span>Total</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <div class="display-4 text-success">@Model.Count(uc => uc.Status == "Completed")</div>
                                <span>Completed</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <div class="display-4 text-info">@Model.Count(uc => 
                                    uc.Status == "Active" || 
                                    uc.Status == "Pending" || 
                                    uc.Status == "Expired")</div>
                                <span>In Progress</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <div class="display-4 text-danger">@Model.Count(uc => uc.Status == "Expired")</div>
                                <span>Expired</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <p class="mb-0">No competencies have been assigned to this user yet. Click the button above to assign a competency.</p>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="mb-0">Assigned Competencies</h5>
                    </div>
                    <div class="col-md-6">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search by module or status...">
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Competency Module</th>
                            <th>Status</th>
                            <th>Completion Date</th>
                            <th>Expiry Date</th>
                            <th>Remarks</th>
                            <th>Buildings</th>
                            @if (User.IsInRole("Admin"))
                            {
                                <th>Actions</th>
                            }
                        </tr>
                    </thead>
                    <tbody id="competencyTableBody">
                        @foreach (var item in Model)
                        {
                            <tr data-module="@item.CompetencyModule.ModuleName" data-status="@item.Status">
                                <td>
                                    <div>@item.CompetencyModule.ModuleName</div>
                                </td>
                                <td>
                                    @switch (item.Status)
                                    {
                                        case "Active":
                                            <span class="badge bg-success">Active</span>
                                            break;
                                        case "Pending":
                                            <span class="badge bg-info">Pending</span>
                                            break;
                                        case "Expired":
                                            <span class="badge bg-danger">Expired</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@item.Status</span>
                                            break;
                                    }
                                </td>
                                <td>@(item.CompletionDate.HasValue ? item.CompletionDate.Value.ToShortDateString() : "-")</td>
                                <td>
                                    @if (item.ExpiryDate.HasValue)
                                    {
                                        if (item.ExpiryDate.Value < DateTime.Today)
                                        {
                                            <span class="text-danger">@item.ExpiryDate.Value.ToShortDateString()</span>
                                        }
                                        else if (item.ExpiryDate.Value < DateTime.Today.AddMonths(1))
                                        {
                                            <span class="text-warning">@item.ExpiryDate.Value.ToShortDateString()</span>
                                        }
                                        else
                                        {
                                            @item.ExpiryDate.Value.ToShortDateString()
                                        }
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                </td>
                                <td>@(string.IsNullOrEmpty(item.Remarks) ? "-" : item.Remarks)</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Building))
                                    {
                                        var buildings = item.Building.Split(',');
                                        foreach (var building in buildings)
                                        {
                                            <span class="badge bg-info text-black me-1">@building</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                @if (User.IsInRole("Admin"))
                                {
                                    <td>
                                        <a href="@Url.Action("Edit", "UserCompetency", new { id = item.Id })" class="btn btn-sm btn-outline-primary me-2">
                                            <i class="fas fa-edit me-1"></i>Edit
                                        </a>
                                        @using (Html.BeginForm("Delete", "UserCompetency", new { id = item.Id }, FormMethod.Post, new { style = "display:inline;" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                    onclick="return confirm('Are you sure you want to remove this competency assignment? This action cannot be undone.');">
                                                <i class="fas fa-trash me-1"></i>Remove
                                            </button>
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@section scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <script>
        $(document).ready(function () {
            // Search filtering
            $("#searchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                
                $("#competencyTableBody tr").filter(function () {
                    var moduleMatch = $(this).data("module").toLowerCase().indexOf(value) > -1;
                    var statusMatch = $(this).data("status").toLowerCase().indexOf(value) > -1;
                    $(this).toggle(moduleMatch || statusMatch);
                });
            });
        });
    </script>
} 