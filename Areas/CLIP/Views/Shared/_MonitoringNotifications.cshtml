@model List<EHS_PORTAL.Areas.CLIP.Models.MonitoringNotification>

@{
    var notificationCount = Model?.Count ?? 0;
    var hasNotifications = notificationCount > 0;
}

<div class="notification-toggle-container">
    <button class="btn btn-light notification-toggle-btn" id="notificationToggleBtn" title="Toggle Notifications">
        <i class="fas fa-bell"></i>
        @if (hasNotifications)
        {
            <span class="badge bg-danger notification-badge">@notificationCount</span>
        }
    </button>
</div>

<div class="notification-panel" id="notificationsPanel">
    <div class="notification-header">
        <h6 class="m-0">
            <i class="fas fa-bell me-2"></i> Notifications
            @if (hasNotifications)
            {
                <span class="badge bg-danger ms-1">@notificationCount</span>
            }
        </h6>
        <button class="btn-close notification-close" id="notificationCloseBtn"></button>
    </div>
    <div class="notification-body" id="notificationsList">
        @if (hasNotifications)
        {
            <div class="notification-list">
                @foreach (var notification in Model)
                {
                    <a href="@notification.Link" class="notification-item">
                        <div class="notification-icon @notification.BadgeClass">
                            <i class="fas @notification.IconClass"></i>
                        </div>
                        <div class="notification-content">
                            <div class="notification-title">
                                <span>@notification.Title</span>
                                <small>@notification.CreatedDate.ToString("MMM dd, HH:mm")</small>
                            </div>
                            <p class="notification-message">@notification.Message</p>
                        </div>
                    </a>
                }
            </div>
        }
        else
        {
            <div class="text-center py-3">
                <i class="fas fa-check-circle text-success fa-2x mb-2"></i>
                <p class="mb-0">No pending notifications</p>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function() {
        var notificationsPanel = document.getElementById('notificationsPanel');
        var notificationToggleBtn = document.getElementById('notificationToggleBtn');
        var notificationCloseBtn = document.getElementById('notificationCloseBtn');
        
        if (!notificationsPanel || !notificationToggleBtn) return;
        
        // Initially hide the panel
        notificationsPanel.style.display = 'none';
        
        // Toggle notifications panel when the bell icon is clicked
        notificationToggleBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            if (notificationsPanel.style.display === 'none') {
                notificationsPanel.style.display = 'block';
                localStorage.setItem('notificationsPanelVisible', 'true');
            } else {
                notificationsPanel.style.display = 'none';
                localStorage.setItem('notificationsPanelVisible', 'false');
            }
        });
        
        // Close button event
        if (notificationCloseBtn) {
            notificationCloseBtn.addEventListener('click', function() {
                notificationsPanel.style.display = 'none';
                localStorage.setItem('notificationsPanelVisible', 'false');
            });
        }
        
        // Close panel when clicking outside
        document.addEventListener('click', function(e) {
            if (notificationsPanel.style.display !== 'none') {
                if (!notificationsPanel.contains(e.target) && e.target !== notificationToggleBtn) {
                    notificationsPanel.style.display = 'none';
                    localStorage.setItem('notificationsPanelVisible', 'false');
                }
            }
        });
        
        // Check if we have saved the visibility state in localStorage
        var savedVisibility = localStorage.getItem('notificationsPanelVisible');
        if (savedVisibility === 'true') {
            notificationsPanel.style.display = 'block';
        } 
    });
</script>

<style>
    /* Notification panel styles */
    .notification-toggle-container {
        position: relative;
        z-index: 1001;
    }
    
    .notification-toggle-btn {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: fixed;
        right: 15px;
        top: 70px;
        border-radius: 50%;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        background-color: white;
        border: none;
        z-index: 1001;
    }
    
    .notification-toggle-btn:hover {
        background-color: #f8f9fa;
    }
    
    .notification-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        font-size: 0.65rem;
        padding: 0.25rem 0.4rem;
    }
    
    .notification-panel {
        position: fixed;
        top: 115px;
        right: 15px;
        width: 350px;
        max-width: 90vw;
        max-height: 70vh;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 1000;
        overflow: hidden;
        display: none;
    }
    
    .notification-header {
        padding: 12px 15px;
        background-color: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .notification-close {
        font-size: 0.8rem;
        padding: 0.2rem;
    }
    
    .notification-body {
        max-height: calc(70vh - 40px);
        overflow-y: auto;
    }
    
    .notification-list {
        padding: 0;
    }
    
    .notification-item {
        display: flex;
        padding: 12px 15px;
        border-bottom: 1px solid #f0f0f0;
        transition: background-color 0.2s;
        text-decoration: none;
        color: inherit;
    }
    
    .notification-item:hover {
        background-color: #f8f9fa;
        text-decoration: none;
        color: inherit;
    }
    
    .notification-icon {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 12px;
        color: white;
    }
    
    .notification-content {
        flex: 1;
    }
    
    .notification-title {
        display: flex;
        justify-content: space-between;
        margin-bottom: 4px;
    }
    
    .notification-title span {
        font-weight: 600;
        font-size: 0.9rem;
    }
    
    .notification-title small {
        color: #6c757d;
        font-size: 0.75rem;
    }
    
    .notification-message {
        font-size: 0.85rem;
        margin-bottom: 0;
        color: #495057;
    }
    
    /* Badge background colors */
    .bg-warning {
        background-color: #f6c23e !important;
    }
    
    .bg-info {
        background-color: #36b9cc !important;
    }
    
    .bg-success {
        background-color: #1cc88a !important;
    }
    
    .bg-primary {
        background-color: #4e73df !important;
    }
    
    .bg-danger {
        background-color: #e74a3b !important;
    }
    
    /* Responsive adjustments */
    @media (max-width: 576px) {
        .notification-panel {
            width: 300px;
            max-width: calc(100vw - 30px);
            right: 10px;
        }
        
        .notification-toggle-btn {
            right: 10px;
        }
    }
</style> 