@model EHS_PORTAL.Areas.CLIP.Models.IndexViewModel
@{
    ViewBag.Title = "Manage Your Account";
}

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title</h2>

    <p class="text-success">@ViewBag.StatusMessage</p>
    
    @if (User.IsInRole("Admin"))
    {
        <div class="mb-4">
            <a href="@Url.Action("Register", "Account")" class="btn btn-primary">
                <i class="fas fa-user-plus me-2"></i>Register New User
            </a>
            <a href="@Url.Action("Users")" class="btn btn-info ms-2">
                <i class="fas fa-users-cog me-2"></i>User Management
            </a>
        </div>
    }
    
    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0"><i class="fas fa-user-edit me-2"></i>Your Profile</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Index", "Manage", FormMethod.Post, new { @class = "needs-validation" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
                        @Html.HiddenFor(m => m.UserId)
                        
                        <div class="row">
                            <!-- Basic Information -->
                            <div class="col-md-6">
                                <h5 class="border-bottom pb-2 mb-3">Basic Information</h5>
                                
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.UserName, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                                </div>
                                
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                                
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.EmpID, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.EmpID, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.EmpID, "", new { @class = "text-danger" })
                                </div>
                                
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <!-- Additional Information -->
                            <div class="col-md-6">
                                <h5 class="border-bottom pb-2 mb-3">Additional Information</h5>
                                
                                @if (User.IsInRole("Admin"))
                                {
                                    <div class="mb-3">
                                        @Html.LabelFor(m => m.CEP_Points, new { @class = "form-label" })
                                        @Html.TextBoxFor(m => m.CEP_Points, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.CEP_Points, "", new { @class = "text-danger" })
                                    </div>
                                    
                                    <div class="mb-3">
                                        @Html.LabelFor(m => m.CPD_Points, new { @class = "form-label" })
                                        @Html.TextBoxFor(m => m.CPD_Points, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.CPD_Points, "", new { @class = "text-danger" })
                                    </div>
                                }
                                else
                                {
                                    <div class="mb-3">
                                        <label class="form-label">CEP Points</label>
                                        <p class="form-control-static">@(Model.CEP_Points ?? 0)</p>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label class="form-label">CPD Points</label>
                                        <p class="form-control-static">@(Model.CPD_Points ?? 0)</p>
                                    </div>
                                }
                                
                                <div class="mb-3">
                                    <label class="form-label">Role</label>
                                    <p class="form-control-static">
                                        @if (Model.UserRoles != null && Model.UserRoles.Any())
                                        {
                                            foreach (var role in Model.UserRoles)
                                            {
                                                <span class="badge bg-danger mb-1">@role</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">No Role Assigned</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                        
                        
                        if (User.IsInRole("Admin"))
                        {
                            <div class="row mt-3">
                                <div class="col-md-12">
                                    <h5 class="border-bottom pb-2 mb-3">Plant Assignments</h5>
                                    
                                    <div class="mb-3">
                                        @Html.LabelFor(m => m.SelectedPlantIds, new { @class = "form-label" })
                                        @Html.ListBoxFor(m => m.SelectedPlantIds, Model.PlantsList, new { @class = "form-control", multiple = "multiple" })
                                        <small class="form-text text-muted">Hold Ctrl (or Cmd on Mac) to select multiple plants</small>
                                    </div>
                                </div>
                            </div>
                        }
                        else if (Model.UserPlants != null && Model.UserPlants.Any())
                        {
                            <div class="row mt-3">
                                <div class="col-md-12">
                                    <h5 class="border-bottom pb-2 mb-3">Your Plant Assignments</h5>
                                    
                                    <div class="mb-3">
                                        <ul class="list-group">
                                            @foreach (var plant in Model.UserPlants)
                                            {
                                                <li class="list-group-item">@plant.PlantName</li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i>Save Changes
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0"><i class="fas fa-shield-alt me-2"></i>Security Settings</h4>
                </div>
                <div class="card-body">
                    <dl class="dl-horizontal">
                        <dt>Password:</dt>
                        <dd>
                            @if (Model.HasPassword)
                            {
                                <a href="@Url.Action("ChangePassword")" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-key me-1"></i>Change your password
                                </a>
                            }
                            else
                            {
                                <a href="@Url.Action("SetPassword")" class="btn btn-outline-success btn-sm">
                                    <i class="fas fa-plus-circle me-1"></i>Create password
                                </a>
                            }
                        </dd>
                        
                        <dt class="mt-3">External Logins:</dt>
                        <dd>
                            <a href="@Url.Action("ManageLogins")" class="btn btn-outline-secondary btn-sm">
                                <i class="fas fa-external-link-alt me-1"></i>Manage (@Model.Logins.Count)
                            </a>
                        </dd>
                        
                        <dt class="mt-3">Two-Factor Auth:</dt>
                        <dd>
                            @if (Model.TwoFactor)
                            {
                                using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, htmlAttributes: new Dictionary<string, object> { { "class", "form-horizontal" }, { "role", "form" } }))
                                {
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-danger btn-sm">
                                        <i class="fas fa-toggle-off me-1"></i>Disable
                                    </button>
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, htmlAttributes: new Dictionary<string, object> { { "class", "form-horizontal" }, { "role", "form" } }))
                                {
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-success btn-sm">
                                        <i class="fas fa-toggle-on me-1"></i>Enable
                                    </button>
                                }
                            }
                        </dd>
                    </dl>
                </div>
            </div>
            
            @if (Model.UserCompetencies != null && Model.UserCompetencies.Any())
            {
                <div class="card mb-4">
                    <div class="card-header bg-success text-white">
                        <h4 class="mb-0"><i class="fas fa-certificate me-2"></i>Your Competencies</h4>
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            @foreach (var competency in Model.UserCompetencies)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @competency.CompetencyModule.ModuleName
                                    <span class="badge bg-primary rounded-pill">
                                        @if(competency.CompletionDate.HasValue)
                                        {
                                            @competency.CompletionDate.Value.ToString("yyyy-MM-dd")
                                        }
                                        else
                                        {
                                            @:N/A
                                        }
                                    </span>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
    
    @if (User.IsInRole("Admin"))
    {
        <div class="row mt-3">
            <div class="col text-center">
                <a href="@Url.Action("Index", "PlantMonitoring")" class="btn btn-primary me-2">
                    <i class="fas fa-chart-line me-1"></i>Monitoring Dashboard
                </a>
                <a href="@Url.Action("Index", "UserCompetency")" class="btn btn-success me-2">
                    <i class="fas fa-users-cog me-1"></i>User Competencies
                </a>
                <a href="@Url.Action("Index", "CertificateOfFitness")" class="btn btn-warning">
                    <i class="fas fa-file-certificate me-1"></i>Certificates of Fitness
                </a>
            </div>
        </div>
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}