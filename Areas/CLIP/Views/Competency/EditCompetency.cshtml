@model EHS_PORTAL.Areas.CLIP.Models.CompetencyModule
@{
    ViewBag.Title = "Edit Competency Module";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="card-title mb-0">Edit Competency Module</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Edit", "Competency", FormMethod.Post, new { @class = "needs-validation" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)
                        @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
                        
                        <div class="mb-3">
                            @Html.LabelFor(m => m.ModuleName, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.ModuleName, new { @class = "form-control", placeholder = "Enter module name" })
                            @Html.ValidationMessageFor(m => m.ModuleName, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter module description", rows = 3 })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="mb-3">
                            @Html.LabelFor(m => m.CompetencyType, "Competency Type", new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.CompetencyType, 
                                new List<SelectListItem> { 
                                    new SelectListItem { Text = "Continuing Professional Development (CPD)", Value = "CPD" },
                                    new SelectListItem { Text = "Continuing Education Program (CEP)", Value = "CEP" },
                                    new SelectListItem { Text = "General Certification", Value = "General" },
                                    new SelectListItem { Text = "Environment", Value = "Environment" },
                                    new SelectListItem { Text = "Safety", Value = "Safety" },
                                    new SelectListItem { Text = "Others", Value = "Others" }
                                },
                                "Select competency type", new { @class = "form-control", id = "competencyType" })
                            @Html.ValidationMessageFor(m => m.CompetencyType, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="mb-3" id="annualPointDeductionSection" style="display: @(Model.CompetencyType == "Safety" ? "block" : "none");">
                            @Html.LabelFor(m => m.AnnualPointDeduction, "Points required per year", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.AnnualPointDeduction, new { @class = "form-control", type = "number", min = "0", placeholder = "Enter required points per year" })
                            @Html.ValidationMessageFor(m => m.AnnualPointDeduction, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="mt-4 d-flex justify-content-between">
                            <a href="@Url.Action("Index", "Competency")" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back to List
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    
    <script>
        $(document).ready(function() {
            // Function to toggle Annual Point Deduction section visibility
            function toggleAnnualPointDeduction() {
                var competencyType = $('#competencyType').val();
                if (competencyType === 'Safety') {
                    $('#annualPointDeductionSection').show();
                    // Make the field required when visible
                    $('#AnnualPointDeduction').attr('required', 'required');
                } else {
                    $('#annualPointDeductionSection').hide();
                    // Remove required attribute when hidden and clear value
                    $('#AnnualPointDeduction').removeAttr('required').val('');
                }
            }         

            // Initial check on page load
            toggleAnnualPointDeduction();
            
            // Check whenever the dropdown changes
            $('#competencyType').change(toggleAnnualPointDeduction);
        });
    </script>
} 