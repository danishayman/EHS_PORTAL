@model CLIP.Models.UserCompetency
@{
    ViewBag.Title = "Edit User Competency";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h2 class="h4 mb-0">Edit Competency Status</h2>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <div class="row">
                            <div class="col-md-6">
                                <dl>
                                    <dt>User</dt>
                                    <dd>@Model.User.UserName</dd>
                                </dl>
                            </div>
                            <div class="col-md-6">
                                <dl>
                                    <dt>Competency Module</dt>
                                    <dd>@Model.CompetencyModule.ModuleName</dd>
                                </dl>
                            </div>
                        </div>
                    </div>

                    @using (Html.BeginForm("Edit", "UserCompetency", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.UserId)
                        @Html.HiddenFor(model => model.CompetencyModuleId)

                        <div class="mb-3">
                            <label for="Status" class="form-label">Status</label>
                            <select id="Status" name="Status" class="form-select" required>
                                @foreach (var status in ViewBag.Statuses)
                                {
                                    <option value="@status" @(Model.Status == status ? "selected" : "")>@status</option>
                                }
                            </select>
                            <div class="invalid-feedback">
                                Please select a status.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="CompletionDate" class="form-label">Completion Date</label>
                            <input type="date" class="form-control" id="CompletionDate" name="CompletionDate" 
                                   value="@(Model.CompletionDate.HasValue ? Model.CompletionDate.Value.ToString("yyyy-MM-dd") : "")">
                            <small class="text-muted">Leave blank if not yet completed.</small>
                        </div>

                        <div class="mb-3">
                            <label for="Remarks" class="form-label">Remarks</label>
                            <textarea class="form-control" id="Remarks" name="Remarks" rows="3">@Model.Remarks</textarea>
                        </div>

                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <small>
                                When status is set to "Completed", the expiry date will be automatically calculated based on the competency module's validity period.
                            </small>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Index", "UserCompetency")" class="btn btn-outline-secondary">Cancel</a>
                            <button type="submit" class="btn btn-primary">Update Status</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <script>
        $(document).ready(function () {
            // Bootstrap form validation
            (function () {
                'use strict'
                var forms = document.querySelectorAll('.needs-validation')
                Array.prototype.slice.call(forms)
                    .forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault()
                                event.stopPropagation()
                            }
                            form.classList.add('was-validated')
                        }, false)
                    })
            })()

            // Handle completion date auto-setting when status changes to Completed
            $('#Status').on('change', function() {
                if ($(this).val() === 'Completed' && $('#CompletionDate').val() === '') {
                    var today = new Date();
                    var dd = String(today.getDate()).padStart(2, '0');
                    var mm = String(today.getMonth() + 1).padStart(2, '0');
                    var yyyy = today.getFullYear();
                    today = yyyy + '-' + mm + '-' + dd;
                    $('#CompletionDate').val(today);
                }
            });
        });
    </script>
} 